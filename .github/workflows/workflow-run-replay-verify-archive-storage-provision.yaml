name: "*run replay-verify reusable workflow"

on:
  # This allows the workflow to be triggered from another workflow
  workflow_call:
    inputs:
      NETWORK:
        required: true
        type: string
        description: The network to provision storage for.
      BRANCH:
        type: string
        description: The branch to provision storage for.
  # This allows the workflow to be triggered manually from the Github UI or CLI
  # NOTE: because the "number" type is not supported, we default to 720 minute timeout
  workflow_dispatch:
    inputs:
      NETWORK:
        description: The network to provision storage for.
        type: string
        required: true
      BRANCH:
        description: The branch to provision storage for.
        type: string
jobs:
  provision:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.BRANCH || 'add_replay_verify_workflow' }}      
      
      # Authenticate to Google Cloud the project is aptos-ci
      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: github-actions@aptos-ci.iam.gserviceaccount.com
          export_environment_variables: false
          create_credentials_file: true

      # This is required since we need to switch from aptos-ci to aptos-devinfra-0
      - name: Setup credentials  
        run: |
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ steps.auth.outputs.credentials_file_path }}" >> $GITHUB_ENV
          echo "CLOUDSDK_AUTH_CREDENTIAL_FILE_OVERRIDE=${{ steps.auth.outputs.credentials_file_path }}" >> $GITHUB_ENV 
          echo "GOOGLE_GHA_CREDS_PATH=${{ steps.auth.outputs.credentials_file_path }}" >> $GITHUB_ENV
          echo "CLOUDSDK_AUTH_ACCESS_TOKEN=${{ steps.auth.outputs.access_token }}" >> $GITHUB_ENV

      - name: "Setup GCloud project"
        shell: bash
        run: gcloud config set project aptos-devinfra-0

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          install_components: "kubectl, gke-gcloud-auth-plugin"
      
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.12

      # Install Poetry.
      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: false

      - name: Install poetry project
        run: poetry install --no-root
        shell: bash
        working-directory: ./testsuite/replay-verify

      - name: "Provision storage"
        run: cd testsuite/replay-verify && poetry run python archive_disk_utils.py --network ${{ inputs.NETWORK }}
        